---
format_version: '11'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
workflows:
  deploy:
    description: >
      Deploys app using [Deploy to bitrise.io
      Step](https://devcenter.bitrise.io/en/getting-started/getting-started-with-android-apps.html#deploying-an-android-app-to-bitrise-io-53056).


      Next steps:

      - Check out [Getting started with Android
      apps](https://devcenter.bitrise.io/en/getting-started/getting-started-with-android-apps.html)
      for signing and deployment options.

      - [Set up code signing with *Android Sign*
      Step](https://devcenter.bitrise.io/en/code-signing/android-code-signing/android-code-signing-using-the-android-sign-step.html).
    steps:
    - activate-ssh-key@4: {}
    - git-clone@6: {}
    - cache-pull@2: {}
    - install-missing-android-tools@3:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - change-android-versioncode-and-versionname@1:
        inputs:
        - build_gradle_path: $PROJECT_LOCATION/$MODULE/build.gradle
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - variant: $VARIANT
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - variant: $VARIANT
    - android-build@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - sign-apk@1:
        run_if: '{{getenv "BITRISEIO_ANDROID_KEYSTORE_URL" | ne ""}}'
    - cache-push@2: {}
    - deploy-to-bitrise-io@2: {}
  _Clone-Repo:
    steps:
      - activate-ssh-key@3.1.1:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.11: { }
      - cache-pull@2.0.1: { }
      - script@1.1.5:
          title: Backup the main repo commit data for use in later steps
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                # rewrite the git output variables for later use (we have to do this because any other 
                # git-clone steps in the workflow will overwrite these values)
                envman add --key MAIN_REPO_COMMIT_AUTHOR_NAME --value "$GIT_CLONE_COMMIT_AUTHOR_NAME"
                envman add --key MAIN_REPO_COMMIT_MESSAGE_SUBJECT --value "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT"
                envman add --key MAIN_REPO_COMMIT_MESSAGE_BODY --value "$GIT_CLONE_COMMIT_MESSAGE_BODY"
  Build-AdvancedSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_advanced_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set Advanced Sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./AdvancedSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-BasicSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_basic_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set Basic Sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./BasicSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-ContactSurvey-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_contact_survey_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set Basic Sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./ContactSurvey/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-CustomInvite-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_custom_invite_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set custom invite app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./CustomInvite/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-DbaSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_dba_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set dba sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./DbaSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-FeedbackSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_feedback_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set feedback sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./FeedbackSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-KotlinSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_kotlin_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set kotlin sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./KotlinSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows
  Build-LocalizationSample-QA:
    steps:
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_TEST_DEPLOY_DIR"
    - fastlane@2.7:
        inputs:
        - verbose_log: 'yes'
        - lane: build_localization_sample_qa
        is_always_run: true
    - deploy-to-bitrise-io@2.x.x:
        inputs:
        - deploy_path: "$BITRISE_DEPLOY_DIR_FOR_QA"
        is_always_run: false
    - script@1.1.5:
        title: Set localization sample app install url
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [ -n "$BITRISE_PUBLIC_INSTALL_PAGE_URL" ] ; then
              envman add --key BITRISE_TRIGGERAPP_PUBLIC_INSTALL_PAGE_URL --value "$BITRISE_PUBLIC_INSTALL_PAGE_URL"
            fi
    envs:
    - opts:
        is_expand: false
      BITRISE_DEPLOY_DIR_FOR_QA: "./LocalizationSample/build/outputs/apk/release/"
    before_run:
    - _Setup-For-All-Workflows

  _Setup-For-All-Workflows:
    steps:
      - set-java-version@1:
          run_if: .IsCI
          inputs:
            - set_java_version: '11'
app:
  envs:
  - opts:
      is_expand: false
    adobe_extension_folder: adobe_extension
  - opts:
      is_expand: false
    ADOBE_EXTENSION_BRANCH_NAME: develop
  - opts:
      is_expand: false
    scripts_folder: scripts
  - opts:
      is_expand: false
    PROJECT_LOCATION: "."
  - opts:
      is_expand: false
    MODULE: ''
  - opts:
      is_expand: false
    GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError"
  - opts:
      is_expand: false
    _JAVA_OPTIONS: "-Xms1024m -Xmx4096m"
  - opts:
      is_expand: false
    TEST_VARIANT_QA: qaDebug
  - opts:
      is_expand: false
    TEST_VARIANT_RC: prodRelease
  - opts:
      is_expand: false
    GRADLEW_PATH: "./gradlew"
  - opts:
      is_expand: false
    JIRA_QA_ASSIGNEE_ID: 5dd708b003eda50ef38756ba
  - opts:
      is_expand: false
    JIRA_USER: kanajiraapi@verint.com
  - opts:
      is_expand: false
    TESTS_MODULE: sdk:tests
  - opts:
      is_expand: false
    SCRIPTS_BRANCH_NAME: master
  - opts:
      is_expand: false
    JIRA_SITE: https://kanasoftware.jira.com
  - opts:
      is_expand: false
    APPCENTER_DESTINATIONS: "*"
meta:
  bitrise.io:
    machine_type: standard
